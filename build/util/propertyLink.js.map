{
  "version": 3,
  "sources": ["../../src/util/propertyLink.ts"],
  "sourcesContent": ["\"use strict\";\r\n\r\nimport { EventEmitter } from \"events\";\r\nimport { Component, PropertyChangedEvent } from \"klf-200-api/dist/utils/PropertyChangedEvent\";\r\nimport { Disposable } from \"klf-200-api/dist/utils/TypedEvent\";\r\nimport { PromiseQueue } from \"./promiseQueue\";\r\n\r\nexport function MapAnyPropertyToState<T extends Component>(\r\n\tpropertyValue: T[keyof T],\r\n): string | number | boolean | null {\r\n\tswitch (typeof propertyValue) {\r\n\t\tcase \"boolean\":\r\n\t\t\treturn propertyValue as boolean;\r\n\r\n\t\tcase \"number\":\r\n\t\t\treturn propertyValue as number;\r\n\r\n\t\tcase \"string\":\r\n\t\t\treturn propertyValue as string;\r\n\r\n\t\tdefault:\r\n\t\t\tif (propertyValue) {\r\n\t\t\t\treturn (propertyValue as any).toString();\r\n\t\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport interface PropertyChangedEventHandler<T extends Component> {\r\n\treadonly Adapter: ioBroker.Adapter;\r\n\treadonly Property: keyof T;\r\n\treadonly LinkedObject: T;\r\n\tonPropertyChangedTypedEvent(newValue: T[keyof T]): Promise<string>;\r\n}\r\n\r\nexport interface StateChangedEventHandler {\r\n\treadonly Adapter: ioBroker.Adapter;\r\n\treadonly StateId: string;\r\n\tonStateChange(state: ioBroker.State | null | undefined): Promise<void>;\r\n}\r\n\r\nexport abstract class BasePropertyChangedHandler<T extends Component>\r\n\timplements PropertyChangedEventHandler<T>, Disposable\r\n{\r\n\tprotected disposable?: Disposable;\r\n\r\n\tconstructor(readonly Adapter: ioBroker.Adapter, readonly Property: keyof T, readonly LinkedObject: T) {\r\n\t\tthis.disposable = LinkedObject.propertyChangedEvent.on(async (event: PropertyChangedEvent) => {\r\n\t\t\tif (event.propertyName === this.Property) {\r\n\t\t\t\treturn await this.onPropertyChangedTypedEvent(event.propertyValue as T[keyof T]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tonPropertyChangedTypedEvent(newValue: T[keyof T]): Promise<string> {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis.disposable?.dispose();\r\n\t}\r\n}\r\n\r\nexport type OnPropertyChangedHandlerFunctionType<T extends Component> = (newValue: T[keyof T]) => Promise<string>;\r\n\r\nexport class ComplexPropertyChangedHandler<T extends Component> extends BasePropertyChangedHandler<T> {\r\n\tconstructor(\r\n\t\tAdapter: ioBroker.Adapter,\r\n\t\tProperty: keyof T,\r\n\t\tLinkedObject: T,\r\n\t\treadonly Handler: OnPropertyChangedHandlerFunctionType<T>,\r\n\t) {\r\n\t\tsuper(Adapter, Property, LinkedObject);\r\n\t}\r\n\r\n\tasync onPropertyChangedTypedEvent(newValue: T[keyof T]): Promise<string> {\r\n\t\treturn await this.Handler(newValue);\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis.disposable?.dispose();\r\n\t}\r\n}\r\n\r\nexport class SimplePropertyChangedHandler<T extends Component> extends BasePropertyChangedHandler<T> {\r\n\tconstructor(Adapter: ioBroker.Adapter, readonly StateId: string, Property: keyof T, LinkedObject: T) {\r\n\t\tsuper(Adapter, Property, LinkedObject);\r\n\t}\r\n\r\n\tasync onPropertyChangedTypedEvent(newValue: T[keyof T]): Promise<string> {\r\n\t\treturn await this.Adapter.setStateAsync(this.StateId, MapAnyPropertyToState(newValue), true);\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis.disposable?.dispose();\r\n\t}\r\n}\r\n\r\nexport class PercentagePropertyChangedHandler<T extends Component> extends SimplePropertyChangedHandler<T> {\r\n\tasync onPropertyChangedTypedEvent(newValue: T[keyof T]): Promise<string> {\r\n\t\treturn await this.Adapter.setStateAsync(\r\n\t\t\tthis.StateId,\r\n\t\t\tMath.round((MapAnyPropertyToState(newValue) as number) * 100),\r\n\t\t\ttrue,\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const klfPromiseQueue = new PromiseQueue();\r\n\r\nexport abstract class BaseStateChangeHandler implements StateChangedEventHandler, Disposable {\r\n\tconstructor(readonly Adapter: ioBroker.Adapter, readonly StateId: string) {\r\n\t\t/// The default number of listeners may not be high enough -> raise it to suppress warnings\r\n\t\tconst adapterEmitter = this.Adapter as unknown as EventEmitter;\r\n\t\tconst newMaxSize = adapterEmitter.getMaxListeners() + 1;\r\n\t\tthis.logEventEmitterMaxSize(newMaxSize);\r\n\t\tadapterEmitter.setMaxListeners(newMaxSize);\r\n\t}\r\n\r\n\tprivate logEventEmitterMaxSize(newMaxSize: number): void {\r\n\t\tthis.Adapter.log.debug(`Set maximum number of event listeners of adapter to ${newMaxSize}.`);\r\n\t}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tasync onStateChange(state: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n\r\n\tprivate async stateChanged(id: string, obj: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tif (id === `${this.Adapter.namespace}.${this.StateId}`) {\r\n\t\t\tawait this.onStateChange(obj);\r\n\t\t}\r\n\t}\r\n\r\n\tasync dispose(): Promise<void> {\r\n\t\ttry {\r\n\t\t\tawait this.Adapter.unsubscribeStatesAsync(this.StateId);\r\n\t\t} finally {\r\n\t\t\tconst adapterEmitter = this.Adapter as unknown as EventEmitter;\r\n\t\t\tconst newMaxSize = Math.max(adapterEmitter.getMaxListeners() - 1, 0);\r\n\t\t\tthis.logEventEmitterMaxSize(newMaxSize);\r\n\t\t\tadapterEmitter.setMaxListeners(newMaxSize);\r\n\t\t}\r\n\t}\r\n\r\n\tasync Initialize(): Promise<void> {\r\n\t\t// Bind the stateChanged function to the stateChange event\r\n\t\tthis.Adapter.on(\"stateChange\", this.stateChanged.bind(this));\r\n\r\n\t\t// Listen to the corresponding stateChange event\r\n\t\tawait this.Adapter.subscribeStatesAsync(this.StateId);\r\n\t}\r\n}\r\n\r\nexport class EchoStateChangeHandler<T extends Component> extends BaseStateChangeHandler {\r\n\tasync onStateChange(state: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tif (state?.ack === false) {\r\n\t\t\tawait this.Adapter.setStateAsync(this.StateId, state.val, true);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class SetterStateChangeHandler<T extends Component> extends BaseStateChangeHandler {\r\n\tconstructor(\r\n\t\tAdapter: ioBroker.Adapter,\r\n\t\tStateId: string,\r\n\t\treadonly LinkedObject: T,\r\n\t\treadonly SetterMethodName: keyof T,\r\n\t) {\r\n\t\tsuper(Adapter, StateId);\r\n\r\n\t\tthis.Adapter.log.debug(\r\n\t\t\t`Create a setter state change handler to listen to state ${this.StateId} linked to property ${\r\n\t\t\t\tthis.SetterMethodName\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\t\t\t} on type ${(this.LinkedObject as Object).constructor.name}.`,\r\n\t\t);\r\n\r\n\t\t// Double check, that the setter method exists\r\n\t\tif (typeof LinkedObject[this.SetterMethodName!] === \"function\") {\r\n\t\t\tthis.setterFunction = LinkedObject[this.SetterMethodName!] as unknown as Function;\r\n\t\t} else {\r\n\t\t\tthrow new Error(`${this.SetterMethodName!} is not a function.`);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setterFunction: Function;\r\n\tget SetterFunction(): Function {\r\n\t\treturn this.setterFunction;\r\n\t}\r\n\r\n\tasync onStateChange(state: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tthis.Adapter.log.debug(`SetterStateChangeHandler.onStateChange: ${state}`);\r\n\t\tif (state?.ack === false) {\r\n\t\t\tklfPromiseQueue.push(\r\n\t\t\t\t(async () => {\r\n\t\t\t\t\tawait this.setterFunction.call(this.LinkedObject, state.val);\r\n\t\t\t\t}).bind(this),\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class SimpleStateChangeHandler<T extends Component> extends SetterStateChangeHandler<T> {\r\n\tconstructor(\r\n\t\tAdapter: ioBroker.Adapter,\r\n\t\tStateId: string,\r\n\t\treadonly Property: keyof T,\r\n\t\tLinkedObject: T,\r\n\t\tSetterMethodName?: keyof T,\r\n\t) {\r\n\t\tsuper(Adapter, StateId, LinkedObject, SetterMethodName ?? (`set${Property}Async` as keyof T));\r\n\r\n\t\tthis.Adapter.log.debug(\r\n\t\t\t`Create a simple state change handler to listen to state ${this.StateId} linked to property ${\r\n\t\t\t\tthis.Property\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\r\n\t\t\t} on type ${(this.LinkedObject as Object).constructor.name}.`,\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class PercentageStateChangeHandler<T extends Component> extends SetterStateChangeHandler<T> {\r\n\tasync onStateChange(state: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tif (state?.ack === false) {\r\n\t\t\tklfPromiseQueue.push(\r\n\t\t\t\t(async () => {\r\n\t\t\t\t\tawait this.SetterFunction.call(this.LinkedObject, (state.val as number) / 100);\r\n\t\t\t\t}).bind(this),\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type OnStateChangedHandlerFunctionType = (state: ioBroker.State | null | undefined) => Promise<void>;\r\n\r\nexport class ComplexStateChangeHandler<T extends Component> extends BaseStateChangeHandler {\r\n\tconstructor(Adapter: ioBroker.Adapter, StateId: string, readonly Handler: OnStateChangedHandlerFunctionType) {\r\n\t\tsuper(Adapter, StateId);\r\n\t}\r\n\r\n\tasync onStateChange(state: ioBroker.State | null | undefined): Promise<void> {\r\n\t\tif (state?.ack === false) {\r\n\t\t\tklfPromiseQueue.push(\r\n\t\t\t\t(async () => {\r\n\t\t\t\t\tawait this.Handler(state);\r\n\t\t\t\t}).bind(this),\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": []
}

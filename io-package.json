{
  "common": {
    "name": "klf200",
    "version": "0.9.3",
    "news": {
      "0.9.3": {
        "en": "Fixed running scenes from products",
        "de": "Starten von Szenen über das Produkt ermöglicht"
      },
      "0.9.2": {
        "en": "Fixed version number",
        "de": "Versionsnummer angepasst"
      },
      "0.9.1": {
        "en": "Minor bug fixes",
        "de": "Kleinere Fehlerbehebungen"
      },
      "0.9.0": {
        "en": "initial public beta version",
        "de": "Initiale, öffentliche Beta-Version"
      },
      "0.0.1": {
        "en": "initial adapter",
        "de": "Initiale Version",
        "ru": "Первоначальный адаптер",
        "pt": "Versão inicial",
        "fr": "Version initiale",
        "nl": "Eerste release"
      }
    },
    "title": "KLF-200 Adapter",
    "titleLang": {
      "en": "KLF-200 Adapter",
      "de": "KLF-200 Adapter"
    },
    "desc": {
      "en": "Runs scenes on a KLF-200 Interface",
      "de": "Startet Szenen auf einem KLF-200 Interface"
    },
    "authors": [
        "Michael Schroeder klf200@gmx.de"
    ],
    "docs": {
        "en": "docs/en/admin.md",
        "de": "docs/de/admin.md"
    },
    "platform": "Javascript/Node.js",
    "mode": "daemon",
    "icon": "klf200.png",
    "materialize": true,
    "enabled": true,
    "license": "MIT",
    "extIcon": "https://raw.githubusercontent.com/MiSchroe/ioBroker.klf200/master/admin/klf200.png",
    "keywords": [
      "KLF-200",
      "VELUX"
    ],
    "readme": "https://github.com/MiSchroe/ioBroker.klf200/blob/master/README.md",
    "loglevel": "info",
    "type": "hardware",
    "restartAdapters": []
  },
  "native": {
    "host": "http://velux-klf-",
    "password": "velux123",
    "pollInterval": 60
  },
  "objects": [
    {
      "_id": "_design/klf200",
      "language": "javascript",
      "views": {
        "listSingleProductScenes": {
          "map": "function(doc) {\n  if (doc._id.match(/^klf200\\.[0-9]+\\.scenes\\.[0-9]+$/) && doc.native && doc.native.products.length == 1)\n  {\n  emit([doc.native.products[0].name, doc.native.products[0].status], {id: doc.native.id, name:doc.native.name});\n  }\n  }"
        }
      }
    }
  ]
}
